/* Touch Feedback Animations for Mobile */

/* Base touch manipulation class for all interactive elements */
.touch-manipulation {
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

/* Active state for buttons and clickable elements */
.touch-feedback {
  @apply transition-all duration-150 ease-out;
}

.touch-feedback:active {
  @apply scale-[0.97] opacity-90;
}

/* Ripple effect for material-like feedback */
.touch-ripple {
  position: relative;
  overflow: hidden;
}

.touch-ripple::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.5);
  transform: translate(-50%, -50%);
  transition: width 0.6s, height 0.6s;
}

.touch-ripple:active::before {
  width: 300px;
  height: 300px;
}

/* Press and hold feedback */
.touch-hold {
  @apply transition-all duration-300;
}

.touch-hold:active {
  @apply scale-[0.95] brightness-95;
}

/* Swipe hint animation */
@keyframes swipe-hint {
  0% {
    transform: translateX(0);
    opacity: 0.5;
  }
  50% {
    transform: translateX(-10px);
    opacity: 1;
  }
  100% {
    transform: translateX(0);
    opacity: 0.5;
  }
}

.swipe-hint {
  animation: swipe-hint 2s ease-in-out infinite;
}

/* Native-like button press */
.native-press {
  @apply transition-all duration-100;
  transform: translateY(0);
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.native-press:active {
  transform: translateY(1px);
  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.06);
}

/* Smooth scroll behavior */
.smooth-scroll {
  -webkit-overflow-scrolling: touch;
  scroll-behavior: smooth;
}

/* Prevent scroll bounce on iOS */
.no-bounce {
  overscroll-behavior: contain;
}

/* Page transition animations */
@keyframes slide-in-right {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-in-left {
  from {
    transform: translateX(-100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slide-out-left {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
  }
}

@keyframes slide-out-right {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes scale-in {
  from {
    transform: scale(0.95);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

/* Animation classes */
.animate-slide-in-right {
  animation: slide-in-right 0.3s ease-out;
}

.animate-slide-in-left {
  animation: slide-in-left 0.3s ease-out;
}

.animate-slide-out-left {
  animation: slide-out-left 0.3s ease-in;
}

.animate-slide-out-right {
  animation: slide-out-right 0.3s ease-in;
}

.animate-fade-in {
  animation: fade-in 0.3s ease-out;
}

.animate-scale-in {
  animation: scale-in 0.3s ease-out;
}

/* Loading skeleton animation */
@keyframes skeleton-loading {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

.skeleton-loading {
  background-color: #f0f0f0;
  background-image: linear-gradient(
    90deg,
    #f0f0f0 0px,
    #f8f8f8 40px,
    #f0f0f0 80px
  );
  background-size: 200px 100%;
  background-repeat: no-repeat;
  animation: skeleton-loading 1.5s ease-in-out infinite;
}

/* Pull to refresh animation */
@keyframes pull-rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.pull-to-refresh {
  animation: pull-rotate 1s linear infinite;
}

/* Haptic feedback simulation with CSS */
.haptic-light {
  animation: haptic-light 0.1s ease-out;
}

.haptic-medium {
  animation: haptic-medium 0.15s ease-out;
}

.haptic-heavy {
  animation: haptic-heavy 0.2s ease-out;
}

@keyframes haptic-light {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.99);
  }
}

@keyframes haptic-medium {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.97);
  }
}

@keyframes haptic-heavy {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(0.95);
  }
}