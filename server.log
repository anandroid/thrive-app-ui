
> thrive-app@0.1.0 dev
> next dev --turbopack

   â–² Next.js 15.3.5 (Turbopack)
   - Local:        http://localhost:3000
   - Network:      http://192.168.1.55:3000
   - Environments: .env.local

 âœ“ Starting...
 âœ“ Compiled middleware in 58ms
 âœ“ Ready in 648ms
 âš  Webpack is configured while Turbopack is not, which may cause problems.
 âš  See instructions if you need to configure Turbopack:
  https://nextjs.org/docs/app/api-reference/next-config-js/turbo

 âœ“ Compiled /api/assistant/stream in 284ms
API Route: Received request
API Route: Message: What supplements do I have for sleep? ThreadId: null Intent: null BasicContext: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
API Route: Creating new thread...
API Route: Created thread: thread_GNimWr3flcKVXxhRSifi37Yl
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  object: 'thread.run',
  created_at: 1752164386,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  status: 'queued',
  started_at: null,
  expires_at: 1752164986,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:19:45.580Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  object: 'thread.run',
  created_at: 1752164386,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  status: 'queued',
  started_at: null,
  expires_at: 1752164986,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:19:45.580Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  object: 'thread.run',
  created_at: 1752164386,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  status: 'in_progress',
  started_at: 1752164387,
  expires_at: 1752164986,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:19:45.580Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_SPaEFFzm2zVaTxHNhM71acpQ',
  object: 'thread.run.step',
  created_at: 1752164388,
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752164986,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_SPaEFFzm2zVaTxHNhM71acpQ',
  object: 'thread.run.step',
  created_at: 1752164388,
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752164986,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message',
  created_at: 1752164388,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message',
  created_at: 1752164388,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
 POST /api/assistant/stream 200 in 5190ms
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v',
  object: 'thread.message',
  created_at: 1752164388,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752164391,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_SPaEFFzm2zVaTxHNhM71acpQ',
  object: 'thread.run.step',
  created_at: 1752164388,
  run_id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752164392,
  expires_at: 1752164986,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_RpRSMBPbIxT4LbFy8x6nOe8v' }
  },
  usage: {
    prompt_tokens: 1050,
    completion_tokens: 185,
    total_tokens: 1235,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_QYkSzd1yQg3hwEW5P7wxWnmZ',
  object: 'thread.run',
  created_at: 1752164386,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_GNimWr3flcKVXxhRSifi37Yl',
  status: 'completed',
  started_at: 1752164387,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752164392,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:19:45.580Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1050,
    completion_tokens: 185,
    total_tokens: 1235,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
API Route: Received request
API Route: Message: Help me manage my medications. I need to take blood pressure medicine twice a day and vitamins in the morning. ThreadId: null Intent: null BasicContext: undefined
API Route: Creating new thread...
API Route: Created thread: thread_oowguikKf08RXBxQ07MUc3fb
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: undefined
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  object: 'thread.run',
  created_at: 1752164785,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  status: 'queued',
  started_at: null,
  expires_at: 1752165385,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:24.719Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  object: 'thread.run',
  created_at: 1752164785,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  status: 'queued',
  started_at: null,
  expires_at: 1752165385,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:24.719Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  object: 'thread.run',
  created_at: 1752164785,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  status: 'in_progress',
  started_at: 1752164791,
  expires_at: 1752165385,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:24.719Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step',
  created_at: 1752164793,
  run_id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  type: 'tool_calls',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165385,
  failed_at: null,
  last_error: null,
  step_details: { type: 'tool_calls', tool_calls: [] },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step',
  created_at: 1752164793,
  run_id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  type: 'tool_calls',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165385,
  failed_at: null,
  last_error: null,
  step_details: { type: 'tool_calls', tool_calls: [] },
  usage: null
}
Stream event: thread.run.step.delta {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step.delta',
  delta: { step_details: { type: 'tool_calls', tool_calls: [Array] } }
}
Stream event: thread.run.step.delta {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step.delta',
  delta: { step_details: { type: 'tool_calls', tool_calls: [Array] } }
}
Stream event: thread.run.step.delta {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step.delta',
  delta: { step_details: { type: 'tool_calls', tool_calls: [Array] } }
}
Stream event: thread.run.step.delta {
  id: 'step_vXiqibhq8lC1vjzqzI0q2vfl',
  object: 'thread.run.step.delta',
  delta: { step_details: { type: 'tool_calls', tool_calls: [Array] } }
}
Stream event: thread.run.requires_action {
  id: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  object: 'thread.run',
  created_at: 1752164785,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_oowguikKf08RXBxQ07MUc3fb',
  status: 'requires_action',
  started_at: 1752164791,
  expires_at: 1752165385,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: {
    type: 'submit_tool_outputs',
    submit_tool_outputs: { tool_calls: [Array] }
  },
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:24.719Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
StreamingService: Sending function call to client {
  runId: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  threadId: 'thread_oowguikKf08RXBxQ07MUc3fb',
  toolCallsCount: 2
}
 POST /api/assistant/stream 200 in 10816ms
 âœ“ Compiled /api/assistant/submit-tool-outputs in 127ms
Submit tool outputs received: {
  "threadId": "thread_oowguikKf08RXBxQ07MUc3fb",
  "runId": "run_LAfqGbrvh0b6Q4NH8JjetNwR",
  "toolOutputs": [
    {
      "tool_call_id": "call_ORpM385nCeVYAZ2Qjic8vZbs",
      "output": "{\"routines\":[],\"journals\":[],\"activeCount\":0}"
    },
    {
      "tool_call_id": "call_dGxUfCUxjagf18PNa1JwR2pi",
      "output": "{\"items\":[]}"
    }
  ]
}
Submitting to OpenAI: {
  threadId: 'thread_oowguikKf08RXBxQ07MUc3fb',
  runId: 'run_LAfqGbrvh0b6Q4NH8JjetNwR',
  toolOutputsCount: 2
}
Submitting tool outputs using manual API call...
Tool outputs submitted successfully, run status: queued
Run status: in_progress
Run status: in_progress
Run status: in_progress
Run status: in_progress
Run status: in_progress
Run status: completed
 POST /api/assistant/submit-tool-outputs 200 in 9414ms
API Route: Received request
API Route: Message: I have trouble sleeping ThreadId: null Intent: null BasicContext: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
API Route: Creating new thread...
API Route: Created thread: thread_DpCGeJ93uSTjTBuNodevilXM
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  object: 'thread.run',
  created_at: 1752164819,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  status: 'queued',
  started_at: null,
  expires_at: 1752165419,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:58.866Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  object: 'thread.run',
  created_at: 1752164819,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  status: 'queued',
  started_at: null,
  expires_at: 1752165419,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:58.866Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  object: 'thread.run',
  created_at: 1752164819,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  status: 'in_progress',
  started_at: 1752164821,
  expires_at: 1752165419,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:58.866Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_43MlrjtXfwxwP8u0wT5V2yNW',
  object: 'thread.run.step',
  created_at: 1752164822,
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165419,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_sO78snyQk66QDzuRFkKV6NvB' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_43MlrjtXfwxwP8u0wT5V2yNW',
  object: 'thread.run.step',
  created_at: 1752164822,
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165419,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_sO78snyQk66QDzuRFkKV6NvB' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message',
  created_at: 1752164822,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message',
  created_at: 1752164822,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_sO78snyQk66QDzuRFkKV6NvB',
  object: 'thread.message',
  created_at: 1752164822,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752164832,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_43MlrjtXfwxwP8u0wT5V2yNW',
  object: 'thread.run.step',
  created_at: 1752164822,
  run_id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752164832,
  expires_at: 1752165419,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_sO78snyQk66QDzuRFkKV6NvB' }
  },
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 417,
    total_tokens: 1463,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_3Kuvqa9jTgLNzETYtqUQLP5O',
  object: 'thread.run',
  created_at: 1752164819,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_DpCGeJ93uSTjTBuNodevilXM',
  status: 'completed',
  started_at: 1752164821,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752164832,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:26:58.866Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 417,
    total_tokens: 1463,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
 POST /api/assistant/stream 200 in 14588ms
API Route: Received request
API Route: Message: I have trouble sleeping ThreadId: null Intent: null BasicContext: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
API Route: Creating new thread...
API Route: Created thread: thread_m4rH50iaZGXtcapOs3GjB1Os
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  object: 'thread.run',
  created_at: 1752164846,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  status: 'queued',
  started_at: null,
  expires_at: 1752165446,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:27:25.633Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  object: 'thread.run',
  created_at: 1752164846,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  status: 'queued',
  started_at: null,
  expires_at: 1752165446,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:27:25.633Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  object: 'thread.run',
  created_at: 1752164846,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  status: 'in_progress',
  started_at: 1752164847,
  expires_at: 1752165446,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:27:25.633Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_frZ5w0RHpPhzi3SA4whzc6iu',
  object: 'thread.run.step',
  created_at: 1752164848,
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165446,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_axXicXDplnuqEo49oGIxSj19' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_frZ5w0RHpPhzi3SA4whzc6iu',
  object: 'thread.run.step',
  created_at: 1752164848,
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752165446,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_axXicXDplnuqEo49oGIxSj19' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message',
  created_at: 1752164848,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message',
  created_at: 1752164848,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_axXicXDplnuqEo49oGIxSj19',
  object: 'thread.message',
  created_at: 1752164848,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752164854,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_frZ5w0RHpPhzi3SA4whzc6iu',
  object: 'thread.run.step',
  created_at: 1752164848,
  run_id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752164855,
  expires_at: 1752165446,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_axXicXDplnuqEo49oGIxSj19' }
  },
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 434,
    total_tokens: 1480,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_XYoV8jwLbdHD49HsjMBk3XFg',
  object: 'thread.run',
  created_at: 1752164846,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_m4rH50iaZGXtcapOs3GjB1Os',
  status: 'completed',
  started_at: 1752164847,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752164855,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:27:25.633Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 434,
    total_tokens: 1480,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
 POST /api/assistant/stream 200 in 13682ms
API Route: Received request
API Route: Message: I still have trouble falling asleep even with my current routine ThreadId: null Intent: null BasicContext: {
  pantryCount: 3,
  activeRoutineCount: 1,
  routineTypes: 'sleep_wellness'
}
API Route: Creating new thread...
API Route: Created thread: thread_v5jUwG2qkKzeuzW1OAG7lVCG
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: {
  pantryCount: 3,
  activeRoutineCount: 1,
  routineTypes: 'sleep_wellness'
}
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  object: 'thread.run',
  created_at: 1752166025,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  status: 'queued',
  started_at: null,
  expires_at: 1752166625,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:05.154Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  object: 'thread.run',
  created_at: 1752166025,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  status: 'queued',
  started_at: null,
  expires_at: 1752166625,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:05.154Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  object: 'thread.run',
  created_at: 1752166025,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  status: 'in_progress',
  started_at: 1752166027,
  expires_at: 1752166625,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:05.154Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_yqDHQMcL0i0xvA287sguw5SP',
  object: 'thread.run.step',
  created_at: 1752166028,
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166625,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_yqDHQMcL0i0xvA287sguw5SP',
  object: 'thread.run.step',
  created_at: 1752166028,
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166625,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message',
  created_at: 1752166028,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message',
  created_at: 1752166028,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0',
  object: 'thread.message',
  created_at: 1752166028,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752166031,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_yqDHQMcL0i0xvA287sguw5SP',
  object: 'thread.run.step',
  created_at: 1752166028,
  run_id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752166031,
  expires_at: 1752166625,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_LZSMhCXZNjbEDeYjg3ge8Ll0' }
  },
  usage: {
    prompt_tokens: 1056,
    completion_tokens: 248,
    total_tokens: 1304,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_MGqsIiKg7hAoItdsxEEzzQzH',
  object: 'thread.run',
  created_at: 1752166025,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_v5jUwG2qkKzeuzW1OAG7lVCG',
  status: 'completed',
  started_at: 1752166027,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752166032,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:05.154Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1056,
    completion_tokens: 248,
    total_tokens: 1304,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
 POST /api/assistant/stream 200 in 9804ms
API Route: Received request
API Route: Message: I have trouble sleeping ThreadId: null Intent: null BasicContext: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
API Route: Creating new thread...
API Route: Created thread: thread_OXTfVS3aDDv2UuhwNHCd6itX
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  object: 'thread.run',
  created_at: 1752166035,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  status: 'queued',
  started_at: null,
  expires_at: 1752166635,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:13.227Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  object: 'thread.run',
  created_at: 1752166035,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  status: 'queued',
  started_at: null,
  expires_at: 1752166635,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:13.227Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  object: 'thread.run',
  created_at: 1752166035,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  status: 'in_progress',
  started_at: 1752166037,
  expires_at: 1752166635,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:13.227Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_58CM25dXW01EZNUN9hVK1Hpf',
  object: 'thread.run.step',
  created_at: 1752166038,
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166635,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_58CM25dXW01EZNUN9hVK1Hpf',
  object: 'thread.run.step',
  created_at: 1752166038,
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166635,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message',
  created_at: 1752166038,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message',
  created_at: 1752166038,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
 POST /api/assistant/stream 200 in 7655ms
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z',
  object: 'thread.message',
  created_at: 1752166038,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752166043,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_58CM25dXW01EZNUN9hVK1Hpf',
  object: 'thread.run.step',
  created_at: 1752166038,
  run_id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752166043,
  expires_at: 1752166635,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_nv5E2y7RWbOKGFdMVOKaJF7Z' }
  },
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 298,
    total_tokens: 1344,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_U6foC7HcypHHR7wvjkRAqMkq',
  object: 'thread.run',
  created_at: 1752166035,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_OXTfVS3aDDv2UuhwNHCd6itX',
  status: 'completed',
  started_at: 1752166037,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752166043,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:47:13.227Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 298,
    total_tokens: 1344,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
API Route: Received request
API Route: Message: I still have trouble falling asleep even with my current routine ThreadId: null Intent: null BasicContext: {
  pantryCount: 3,
  activeRoutineCount: 1,
  routineTypes: 'sleep_wellness'
}
API Route: Creating new thread...
API Route: Created thread: thread_ddT7D14rbWlDTdtoGiHweEpp
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: {
  pantryCount: 3,
  activeRoutineCount: 1,
  routineTypes: 'sleep_wellness'
}
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  object: 'thread.run',
  created_at: 1752166194,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  status: 'queued',
  started_at: null,
  expires_at: 1752166794,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:49:53.658Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  object: 'thread.run',
  created_at: 1752166194,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  status: 'queued',
  started_at: null,
  expires_at: 1752166794,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:49:53.658Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  object: 'thread.run',
  created_at: 1752166194,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  status: 'in_progress',
  started_at: 1752166195,
  expires_at: 1752166794,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:49:53.658Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_7S4EbOkCugmGW6HVw9G2EFQs',
  object: 'thread.run.step',
  created_at: 1752166197,
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166794,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_t94QIyevzYOMT5r7sZfzVpxe' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_7S4EbOkCugmGW6HVw9G2EFQs',
  object: 'thread.run.step',
  created_at: 1752166197,
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166794,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_t94QIyevzYOMT5r7sZfzVpxe' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message',
  created_at: 1752166197,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message',
  created_at: 1752166197,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_t94QIyevzYOMT5r7sZfzVpxe',
  object: 'thread.message',
  created_at: 1752166197,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752166204,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_7S4EbOkCugmGW6HVw9G2EFQs',
  object: 'thread.run.step',
  created_at: 1752166197,
  run_id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752166204,
  expires_at: 1752166794,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_t94QIyevzYOMT5r7sZfzVpxe' }
  },
  usage: {
    prompt_tokens: 1056,
    completion_tokens: 348,
    total_tokens: 1404,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_D0hcRMmxAZQqYO91XvttNxlf',
  object: 'thread.run',
  created_at: 1752166194,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_ddT7D14rbWlDTdtoGiHweEpp',
  status: 'completed',
  started_at: 1752166195,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752166204,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 3 items stored\n' +
    '- Active routines: 1 (sleep_wellness)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:49:53.658Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1056,
    completion_tokens: 348,
    total_tokens: 1404,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
 POST /api/assistant/stream 200 in 12184ms
API Route: Received request
API Route: Message: I have trouble sleeping ThreadId: null Intent: null BasicContext: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
API Route: Creating new thread...
API Route: Created thread: thread_8sfvcKznfXN9Zonlx2SMhtYN
API Route: Sending message to thread...
API Route: Creating streaming response...
StreamingService: Creating context instructions...
ThreadContextManager: Creating run instructions with intent: undefined and basic context: { pantryCount: 0, activeRoutineCount: 0, routineTypes: 'none' }
StreamingService: Context instructions created
Stream event: thread.run.created {
  id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  object: 'thread.run',
  created_at: 1752166207,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  status: 'queued',
  started_at: null,
  expires_at: 1752166807,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:50:07.137Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.queued {
  id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  object: 'thread.run',
  created_at: 1752166207,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  status: 'queued',
  started_at: null,
  expires_at: 1752166807,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:50:07.137Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.in_progress {
  id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  object: 'thread.run',
  created_at: 1752166207,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  status: 'in_progress',
  started_at: 1752166208,
  expires_at: 1752166807,
  cancelled_at: null,
  failed_at: null,
  completed_at: null,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:50:07.137Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: null,
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
Stream event: thread.run.step.created {
  id: 'step_phXgolYjF0yNJgyVg3sJP36w',
  object: 'thread.run.step',
  created_at: 1752166209,
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166807,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9' }
  },
  usage: null
}
Stream event: thread.run.step.in_progress {
  id: 'step_phXgolYjF0yNJgyVg3sJP36w',
  object: 'thread.run.step',
  created_at: 1752166209,
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  type: 'message_creation',
  status: 'in_progress',
  cancelled_at: null,
  completed_at: null,
  expires_at: 1752166807,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9' }
  },
  usage: null
}
Stream event: thread.message.created {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message',
  created_at: 1752166209,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.in_progress {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message',
  created_at: 1752166209,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  status: 'in_progress',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: null,
  role: 'assistant',
  content: [],
  attachments: [],
  metadata: {}
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.delta {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message.delta',
  delta: { content: [ [Object] ] }
}
Stream event: thread.message.completed {
  id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9',
  object: 'thread.message',
  created_at: 1752166209,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  status: 'completed',
  incomplete_details: null,
  incomplete_at: null,
  completed_at: 1752166213,
  role: 'assistant',
  content: [ { type: 'text', text: [Object] } ],
  attachments: [],
  metadata: {}
}
Stream event: thread.run.step.completed {
  id: 'step_phXgolYjF0yNJgyVg3sJP36w',
  object: 'thread.run.step',
  created_at: 1752166209,
  run_id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  type: 'message_creation',
  status: 'completed',
  cancelled_at: null,
  completed_at: 1752166213,
  expires_at: 1752166807,
  failed_at: null,
  last_error: null,
  step_details: {
    type: 'message_creation',
    message_creation: { message_id: 'msg_IcgD590YL5O1Rc37Sq1g1yi9' }
  },
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 287,
    total_tokens: 1333,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  }
}
Stream event: thread.run.completed {
  id: 'run_frCAUCf0lmVcdjQwxX9pvrDY',
  object: 'thread.run',
  created_at: 1752166207,
  assistant_id: 'asst_JpIzQR8eZ58ED8aKMkryZv3y',
  thread_id: 'thread_8sfvcKznfXN9Zonlx2SMhtYN',
  status: 'completed',
  started_at: 1752166208,
  expires_at: null,
  cancelled_at: null,
  failed_at: null,
  completed_at: 1752166213,
  required_action: null,
  last_error: null,
  model: 'gpt-4o-mini',
  instructions: 'CRITICAL: You MUST respond with valid JSON format as specified in your system instructions. Your response MUST be a JSON object with these fields: greeting, attentionRequired, emergencyReasoning, actionItems, additionalInformation, actionableItems, and questions.\n' +
    '\n' +
    '\n' +
    'QUICK CONTEXT (use functions for details if needed):\n' +
    '- Pantry items: 0 items stored\n' +
    '- Active routines: 0 (none)\n' +
    '\n' +
    '\n' +
    'OPTIMIZATION NOTES:\n' +
    "- If the user's question can be answered with the quick context above, do so without calling functions\n" +
    '- Only call get_pantry_items if you need specific item details (e.g., dosage, notes)\n' +
    '- Only call get_thriving_progress if you need detailed routine information\n' +
    '- If user asks about supplements and pantry count is 0, skip get_pantry_items and directly recommend buy actions\n' +
    '- If user mentions health issues and active routine count is 0, skip get_thriving_progress and directly recommend creating routines\n' +
    '- ALWAYS recommend routines/thrivings if user mentions health management and has no relevant routines\n' +
    '- ALWAYS recommend buy actions if user asks about supplements they might not have\n' +
    '\n' +
    'CRITICAL ROUTINE REMINDERS:\n' +
    '- If activeRoutineCount is 0 and user mentions: medication management, pain, sleep issues, stress â†’ IMMEDIATELY suggest creating a routine\n' +
    '- If pantryCount is 0 and user asks about supplements â†’ IMMEDIATELY suggest buy actions without calling get_pantry_items\n' +
    '\n' +
    'After using functions (if needed), format your response as JSON with:\n' +
    '- greeting: A warm greeting acknowledging their concern\n' +
    '- actionItems: Array of remedy/suggestion objects with title and content\n' +
    '- questions: Array of follow-up questions\n' +
    '- actionableItems: Array of actionable items (routine creation, buy supplements, add to pantry, etc.)\n' +
    '\n' +
    'Example JSON response:\n' +
    '{\n' +
    `  "greeting": "I'd be happy to help you with sleep recommendations! ðŸ’¤",\n` +
    '  "attentionRequired": null,\n' +
    '  "emergencyReasoning": null,\n' +
    '  "actionItems": [\n' +
    '    {\n' +
    '      "title": "Magnesium for Better Sleep ðŸŒ™",\n' +
    '      "content": "<p>Take <strong>200-400mg of Magnesium Glycinate</strong> 30 minutes before bed. This form is gentle on the stomach and promotes relaxation.</p>"\n' +
    '    }\n' +
    '  ],\n' +
    '  "additionalInformation": "<p><em>Creating a consistent bedtime routine can significantly improve sleep quality.</em></p>",\n' +
    '  "actionableItems": [\n' +
    '    {\n' +
    '      "type": "thriving",\n' +
    '      "title": "Create Sleep Wellness Routine",\n' +
    '      "thrivingType": "sleep_wellness",\n' +
    '      "duration": "7_days",\n' +
    '      "frequency": "daily"\n' +
    '    },\n' +
    '    {\n' +
    '      "type": "buy",\n' +
    '      "title": "Buy Magnesium Glycinate",\n' +
    '      "productName": "Magnesium Glycinate 400mg",\n' +
    '      "searchQuery": "magnesium glycinate 400mg capsules",\n' +
    '      "dosage": "400mg",\n' +
    '      "timing": "30 minutes before bed"\n' +
    '    }\n' +
    '  ],\n' +
    '  "questions": [\n' +
    '    "What time do you usually go to bed?",\n' +
    '    "Have you tried any sleep supplements before?"\n' +
    '  ]\n' +
    '}\n' +
    '\n',
  tools: [
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] },
    { type: 'function', function: [Object] }
  ],
  tool_resources: { code_interpreter: { file_ids: [] } },
  metadata: { intent: 'general', timestamp: '2025-07-10T16:50:07.137Z' },
  temperature: 1,
  top_p: 1,
  reasoning_effort: null,
  max_completion_tokens: null,
  max_prompt_tokens: 10000,
  truncation_strategy: { type: 'auto', last_messages: null },
  incomplete_details: null,
  usage: {
    prompt_tokens: 1046,
    completion_tokens: 287,
    total_tokens: 1333,
    prompt_token_details: { cached_tokens: 0 },
    completion_tokens_details: { reasoning_tokens: 0 }
  },
  response_format: { type: 'json_object' },
  tool_choice: 'auto',
  parallel_tool_calls: true
}
 POST /api/assistant/stream 200 in 9072ms
 âœ“ Compiled middleware in 0ms
 â—‹ Compiling / ...
 âœ“ Compiled / in 790ms
 GET / 200 in 930ms
 GET /_next/static/chunks/app_chat_%5BthreadId%5D_page_tsx_f9850572._.js 404 in 437ms
 GET /_next/static/chunks/_7be480fc._.js 404 in 439ms
 GET /_next/static/chunks/_33cf13b0._.js 404 in 439ms
 GET /_next/static/chunks/src_services_openai_functions_clientFunctionHandler_ts_c2f74e89._.js 404 in 440ms
 GET /_next/static/chunks/node_modules_38c5f90a._.js 404 in 441ms
 âœ“ Compiled /chat/[threadId] in 484ms
 GET /_next/static/chunks/_7be480fc._.js.map 404 in 59ms
 GET /_next/static/chunks/src_services_openai_functions_clientFunctionHandler_ts_c2f74e89._.js 404 in 60ms
 GET /_next/static/chunks/app_chat_%5BthreadId%5D_page_tsx_f9850572._.js 404 in 73ms
 GET /chat/new 200 in 706ms
 â¨¯ [Error: ENOENT: no such file or directory, open '/Users/anand/IdeaProjects/thrive-app/.next/server/app/api/assistant/stream/[__metadata_id__]/route/app-paths-manifest.json'] {
  errno: -2,
  code: 'ENOENT',
  syscall: 'open',
  path: '/Users/anand/IdeaProjects/thrive-app/.next/server/app/api/assistant/stream/[__metadata_id__]/route/app-paths-manifest.json'
}
 âœ“ Compiled /_error in 359ms
 POST /api/assistant/stream 500 in 477ms
